#!/bin/bash


show_help()
{
    echo "usage: bashfoo --eval-out | --libdir | --bootstrap-script | --help"
    echo ""
    echo "  * bashfoo --eval-out"
    echo "    outputs Bash script that shall be evaulated by bash script"
    echo "    to bootstrap bashfoo env in script"
    echo ""
    echo "  * bashfoo --libdir"
    echo "    outputs bashfoo library path, one shall source bashfoo.sh from"
    echo "    this folder to bootstrap bashfoo env"
    echo ""
    echo "  * bashfoo --bootstrap-script"
    echo "    outputs PATH of bashfoo bootstrap script"
    echo ""
    echo "bashfoo is reusable shell script function library."
    echo "See http://idf2hotpo.pl/index.php/p/bashfoo."
}

show_eval()
{
    ensure_location_variables_initialized
    
    echo "bashfoo_libdir=\"$bashfoo_libdir\" ;"
    echo "source \$bashfoo_libdir/bashfoo.sh"
}

ensure_location_variables_initialized()
{
    if [ -n "$bashfoo_bin_prefix" ] ; then
        return
    fi
    
    bashfoo_bin_prefix=$(dirname $BASH_SOURCE)
    if [ -f "$bashfoo_bin_prefix/bashfoo.sh" ] ; then
        bashfoo_libdir="$bashfoo_bin_prefix"
    elif [ -f "$bashfoo_bin_prefix/../share/bashfoo/bashfoo.sh" ] ; then
        bashfoo_libdir="$bashfoo_bin_prefix/../share/bashfoo"
    elif [ -f "$bashfoo_bin_prefix/../lib/bashfoo/bashfoo.sh" ] ; then
        bashfoo_libdir="$bashfoo_bin_prefix/../lib/bashfoo"
    else
        echo "bashfoo: unable to find bashfoo libdir in $bashfoo_bin_prefix and in $bashfoo_bin_prefix/../lib/bashfoo" >&2
        exit 1
    fi
    
    bashfoo_source_path="bashfoo_libdir/bashfoo.sh"
}

if [ -z "$1" ] ; then
    show_help
    exit 1
fi

# args parse
while [ -n "$1" ] ; do
    if [ "$1" = --help -o "$1" = "-h" ] ; then
        show_help
        exit
    elif [ "$1" = --eval-out ] ; then
        show_eval
        exit
    elif [ "$1" = --libdir ] ; then
        ensure_location_variables_initialized
        echo "$bashfoo_libdir"
        exit
    elif [ "$1" = --bootstrap-script  ] ; then
        ensure_location_variables_initialized
        echo "$bashfoo_source_path"
        exit
    elif [ -f "$1" ] ; then
        ensure_location_variables_initialized
        source "$bashfoo_libdir/bashfoo.sh"
        script="$1"
        shift
        source "$script" "$@"
        exit
    else
        (
            echo "bashfoo: invalid argument -- $1"
            show_help
        ) >&2
        exit 1
    fi
    shift
done

